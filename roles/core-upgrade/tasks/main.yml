---

- name: Stop Phantom
  command:
    chdir: "{{ phantom_home }}/bin/"
    cmd: "./stop_phantom.sh"
  become: yes
  become_user: "{{ os_user }}"

- name: -ulimits- Set /etc/security/limits.conf for "{{ os_user }}" user
  template:
    src: limits.conf.j2
    dest: "/etc/security/limits.conf"
  become: yes 

- name: Ensure {{ phantom_home }} exists
  file:
    path: "{{ phantom_home }}"
    state: directory
    mode: 0755  
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes


- name: Clear yum caches (note this is not supported in yum module so we have to do it in command module)
  command:
    cmd: "yum clean all"
    warn: false
  become: yes

- name: Check for OS package updates (excluding nginx).
  yum:
    name: "*"
    state: latest 
    exclude: nginx* 
  become: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'


- name: Check for the presence of /home/{{ os_user }}/{{ phantom_tgz }}
  stat: 
    path: /home/{{ os_user }}/{{ phantom_tgz }}
    get_checksum: yes  
    checksum_algorithm: sha256
  register: phantom_tgz_downloaded_flag
  become: yes

- name: Copy files/{{ phantom_tgz }} (local) to /home/{{ os_user }}/ (remote)
  copy:
    src: "files/{{ phantom_tgz }}"
    dest: /home/{{ os_user }}
    mode: '0640'
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes
  when: phantom_tgz_downloaded_flag.stat.exists == False

- name: Extract {{ phantom_tgz }} to {{ phantom_home }}
  unarchive:
    src: /home/{{ os_user }}/{{ phantom_tgz }}
    dest: "{{ phantom_home }}/"
    remote_src: yes
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes

- name: Set {{ phantom_home }} owner & group recursively
  file:
    path: "{{ phantom_home }}"
    state: directory
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
    recurse: yes
  become: yes  


- name: Upgrade Phantom using the phantom_tar_install.sh script
  command:
    chdir: "{{ phantom_home }}/"
    cmd: "./phantom_tar_install.sh upgrade --no-prompt --without-apps"
  become: yes
  become_user: "{{ os_user }}"
