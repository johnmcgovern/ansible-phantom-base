---

- name: Set the hostname as per the Ansible inventory file
  hostname:
    name: "{{ inventory_hostname }}"
  become: yes    


- name: Add "{{ os_group }}" group (so we can set ulimits)
  group:
    name: "{{ os_group }}"
    state: present  
  become: yes  

- name: Add "{{ os_user }}" user with the home dir /home/{{ os_user }}/ (so we can set ulimits)
  user:
    name: "{{ os_user }}"
    group: "{{ os_group }}"
    home: /home/{{ os_user }}/
    shell: /bin/bash
    comment: Phantom User
  become: yes


- name: Install EPEL repo (required to install python-pip)
  yum:
    name: epel-release
    state: present
  become: yes    

- name: Install Splunk Phantom prereq packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - python-pip
    - git
    - libevent
    - c-ares
    - bind-utils
    - java-1.8.0-openjdk-headless
    - mailcap
    - fontconfig
    - ntpdate
    - perl
    - rsync
    - xmlsec1
    - xmlsec1-openssl
    - libxslt
    - ntp
    - zip
    - net-tools
    - policycoreutils-python
    - libxml2
    - libcurl
    - gnutls
  become: yes  

- name: Install pexpect
  pip:
    name: pexpect>3.3
  become: yes  


- name: -ulimits- Set /etc/security/limits.conf for "{{ os_user }}" user
  template:
    src: limits.conf.j2
    dest: "/etc/security/limits.conf"
  become: yes


- name: -THP- Install disable-thp script to be run at boottime
  template:
    src: disable-thp.j2
    dest: "/usr/local/bin/disable-thp"
    mode: '0754'
  become: yes

- name: -THP- Install disable-thp systemd unit file
  template:
    src: disable-thp.service.j2
    dest: "/etc/systemd/system/disable-thp.service"
    mode: '0644'
  become: yes  

- name: -THP- Configure systemd to run disable-thp at boot time
  systemd:
    name: disable-thp
    enabled: yes
    masked: no
  become: yes

- name: -THP- Run the disable-thp script
  command: /usr/local/bin/disable-thp
  become: yes    


- name: -firewalld- Check if /usr/sbin/firewalld exists
  stat: 
    path: /usr/sbin/firewalld
  register: firewalld_flag

- name: -firewalld-  Allow tcp/80 traffic through firewalld
  firewalld:
    service: http
    permanent: yes
    state: enabled
  become: yes
  when: firewalld_flag.stat.exists == True

- name: -firewalld-  Allow tcp/{{ phantom_https_port }} traffic through firewalld
  firewalld:
    port: "{{ phantom_https_port }}/tcp"
    permanent: yes
    state: enabled
  become: yes  
  when: firewalld_flag.stat.exists == True

- name: -firewalld- Reload firewalld rules while maintaining session state (be nice to Ansible)   
  command: 
    cmd: firewall-cmd --reload
  become: yes  
  when: firewalld_flag.stat.exists == True


- name: -RedHat & CentOS Updates-
  yum:
    name: "*"
    state: latest  
  become: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Amazon'
