---

- name: Add "{{ os_group }}" group
  group:
    name: "{{ os_group }}"
    state: present  
  become: yes  

- name: Add "{{ os_user }}" user with the home dir /home/{{ os_user }}/
  user:
    name: "{{ os_user }}"
    group: "{{ os_group }}"
    home: /home/{{ os_user }}/
    shell: /bin/bash
    comment: Phantom User
  become: yes

- name: -ulimits- Set /etc/security/limits.conf for "{{ os_user }}" user
  template:
    src: limits.conf.j2
    dest: "/etc/security/limits.conf"
  become: yes 

- name: Create "{{ phantom_home }}" dir
  file:
    path: "{{ phantom_home }}"
    state: directory
    mode: 0755  
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes


- name: -Prereqs- Install EPEL repo (required to install python-pip)
  yum:
    name: epel-release
    state: present
  become: yes    
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'    


- name: -Prereqs- Install Splunk Phantom prereq packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - python-setuptools
    - python-pip
    - git
    - wget
    - libevent
    - libicu
    - c-ares
    - bind-utils
    - java-1.8.0-openjdk-headless
    - mailcap
    - fontconfig
    - ntpdate
    - perl
    - rsync
    - xmlsec1
    - xmlsec1-openssl
    - libxslt
    - ntp
    - zip
    - net-tools
    - policycoreutils-python
    - libxml2
    - libcurl
    - gnutls
  become: yes  


- name: Check for the presence of /home/{{ os_user }}/{{ phantom_tgz }}
  stat: 
    path: /home/{{ os_user }}/{{ phantom_tgz }}
    get_checksum: yes  
    checksum_algorithm: sha256
  register: phantom_tgz_downloaded_flag
  become: yes

- name: -Upload- Copy files/{{ phantom_tgz }} (local) to /home/{{ os_user }}/ (remote)
  copy:
    src: "files/{{ phantom_tgz }}"
    dest: /home/{{ os_user }}
    mode: '0640'
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes
  when: phantom_tgz_downloaded_flag.stat.exists == False and upload_from_local_dir

- name: -Download- Download (wget) {{ phantom_tgz_download_url }}/{{ phantom_tgz }}
  get_url:
    url: "{{ phantom_tgz_download_url }}/{{ phantom_tgz }}"
    checksum: "{{ phantom_tgz_checksum_alg }}:{{ phantom_tgz_checksum }}"
    dest: /home/{{ os_user }}
    mode: '0640'  
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes
  when: phantom_tgz_downloaded_flag.stat.exists == False and not upload_from_local_dir


- name: -Stage- Extract {{ phantom_tgz }} to {{ phantom_home }}
  unarchive:
    src: /home/{{ os_user }}/{{ phantom_tgz }}
    dest: "{{ phantom_home }}/"
    remote_src: yes
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes

- name: -Stage- Set {{ phantom_home }} owner & group recursively
  file:
    path: "{{ phantom_home }}"
    state: directory
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
    recurse: yes
  become: yes  


- name: -Install- Install SOAR using the phantom_tar_install.sh script unless already installed
  command:
    chdir: "{{ phantom_home }}/"
    cmd: "./phantom_tar_install.sh install --no-prompt --https-port={{ phantom_https_port }}"
    creates: "{{ phantom_home }}/var/log/phantom/phantom_install_log"
  become: yes
  become_user: "{{ os_user }}"


- name: -Admin Password- Install pexpect (prereq for next step)
  pip:
    name: pexpect>3.3
  become: yes  

- name: -Admin Password- Set the password for the SOAR web "admin" account
  expect:
    command: /bin/bash -c "/opt/phantom/bin/phenv python /opt/phantom/www/manage.py changepassword admin"
    responses:
      (?i)Password: "{{ phantom_pass }}"
  environment: 
    PYTHONPATH: "/opt/phantom/lib/:/opt/phantom/www/"
  become: yes
  become_user: "{{ os_user }}"

